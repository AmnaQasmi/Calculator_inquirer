"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Indexer = void 0;
const AutoIncrementingID_1 = require("./AutoIncrementingID");
/**
 * Indexer
 *
 * Storage for the `EventEmitter`'s listeners. The `Indexer`
 * is an extension of the map prototype that provides ordered
 * indexing of callbacks with unique identifier for each index
 */
class Indexer extends Map {
    IDs = new AutoIncrementingID_1.AutoIncrementingID();
    /**
     * Register
     *
     * Indexes a callback on the map and returns its unique
     * identifier
     */
    register(callback) {
        const ID = this.IDs.get();
        this.set(ID, callback);
        return ID;
    }
    /**
     * Execute
     *
     * Iterates each lister on the map and executes it with
     * the provided parameters
     */
    execute(...params) {
        for (const [_, listener] of this) {
            void listener(...params);
        }
    }
    /**
     * Execute Blocking
     *
     * Iterates each lister on the map and executes it. Using
     * this method with cause asynchronous operations to be
     * handled synchronously
     */
    async executeBlocking(...params) {
        for (const [_, listener] of this) {
            await listener(...params);
        }
    }
}
exports.Indexer = Indexer;
