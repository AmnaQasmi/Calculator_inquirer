"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Animation = void 0;
const FrameRate_1 = require("./FrameRate");
const Decor_1 = require("./Decor");
class Animation extends FrameRate_1.FrameRate {
    constructor(effect, str, delay = 0, speed = 0) {
        super(delay, speed);
        this.stopped = false;
        this.initialized = false;
        this.replace = Decor_1.Decor.chainable(this, (str) => {
            this.text = str.split(Animation.LINE_BREAKS);
            this.lines = this.text.length;
        });
        this.stop = Decor_1.Decor.chainable(this, () => {
            this.clearFrames();
            this.stopped = true;
        });
        this.start = Decor_1.Decor.chainable(this, () => {
            this.clearFrames();
            this.stopped = false;
            this.render();
        });
        this.effect = effect;
        this.text = str.split(Animation.LINE_BREAKS);
        this.lines = this.text.length;
    }
    render() {
        if (!this.initialized) {
            Animation.LOG("\n".repeat(this.lines - 1));
            this.initialized = true;
        }
        Animation.LOG(this.nextFrame());
        this.schedule(() => {
            if (!this.stopped) {
                this.render();
            }
        });
    }
    nextFrame() {
        this.increment();
        return ("\u001B[" +
            `${this.lines}` +
            "F\u001B[G\u001B[2K" +
            this.text.map(str => this.effect(str, this.current)).join("\n"));
    }
}
exports.Animation = Animation;
Animation.LINE_BREAKS = /\r\n|\r|\n/;
